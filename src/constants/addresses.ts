import { Networks } from "./blockchain";

const KOVAN_TESTNET = {
    D33D_ADDRESS: "0xEa6cFeAcD4c7f29bD56b0d42083e12f0430cd2D3",
    FSD33D_ADDRESS: "0x66894b130e708a33bc1f68c861208aff26f4b40b",
    GD33D_ADDRESS: "0xA6c55a9DC2e45dc9611153FC95568D0158F8B13D",
    TREASURY_ADDRESS: "0x9dB81A0FB5c3C6Cb23ab1b0098E1848705715F7B",
    STAKING_ADDRESS: "0x0374e77439acbA0cddD4D572c88BB3E8f82f230E",
    DISTRIBUTOR_ADDRESS: "0xc21ed8B59bcA590c0C4Aed6116e606E2872EBb91",

    MANA_BOND_CALCULATOR_ADDRESS: "0xbb0B85489D54BC0c10D30A944FFA1BBAd80eE1b0",
    SAND_BOND_CALCULATOR_ADDRESS: "0x8c29fdb14d02bc08b8b359388a65c1def74d02c7",
    D33D_USDC_BOND_CALCULATOR_ADDRESS: "0x86D66Ba79aad3FDa8D7E934F69BEF7D441C4a0FB",
    ETH_BOND_CALCULATOR_ADDRESS: "0x2ce676dd6af19d5f53381142f3705596d67c19c5",

    DAO_ADDRESS: "0x78a9e536EBdA08b5b9EDbE5785C9D1D50fA3278C",
    MIM_ADDRESS: "0x130966628846BFd36ff31a822705796e8cb8C18D",
    STAKING_HELPER_ADDRESS: "0x096BBfB78311227b805c968b070a81D358c13379",
    USDC_ADDRESS: "0xDf5324ebe6F6b852Ff5cBf73627eE137e9075276",
    REDEEM_ADDRESS: "0x9c4E7485279d319e77651700Ac4672A578425568", //Convert Redeem Contract ie: Pd33d -> d33d
    PD33D_ADDRESS: "0x00F428bb293F4faDA7351f5daC9e78af61401C5b",
    USM_ADDREESS: "0x7E05DC0396b4Cfc764B2C9E891dfCD5CE8bF8312",
    USM_MINTER: "0xcd2B2DcAc7213471bf4E67E224489744d028b729",
    DVD_ADDRESS: "0x9767292B1B832192aeB030742463b64cD5797264",

    BENTOBOX_ADDRESS: "0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",
    KASHI_PAIR_ADDRESS: "0x35C076079E3d280935428ec5764F384e3e2aeab4"
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.ETH) return KOVAN_TESTNET;

    throw Error("Network don't support");
};
